From c8a2d993899f5828d13209dca4d5c2119c9c22ba Mon Sep 17 00:00:00 2001
From: Simeon Bird <sbird4@jhu.edu>
Date: Wed, 18 Jan 2017 16:56:03 -0500
Subject: [PATCH 3/3] Add a hubble function, called instead of the open-coded
 version.

Make this hubble function incorporate radiation and neutrinos.
---
 driftfac.c | 50 ++++++++++++++++++++++++++++++++++++++------------
 hydra.c    |  5 +----
 proto.h    |  2 ++
 timestep.c |  4 +---
 4 files changed, 42 insertions(+), 19 deletions(-)

diff --git a/driftfac.c b/driftfac.c
index c6b9f7c..ae34145 100644
--- a/driftfac.c
+++ b/driftfac.c
@@ -16,6 +16,40 @@
 static double logTimeBegin;
 static double logTimeMax;
 
+#ifdef INCLUDE_RADIATION
+/*Stefan-Boltzmann constant in cgs units*/
+#define T_CMB0 2.7255
+#define STEFAN_BOLTZMANN 5.670373e-5
+/* Omega_g = 4 \sigma_B T_{CMB}^4 8 \pi G / (3 c^3 H^2)*/
+#define OMEGAG (4*STEFAN_BOLTZMANN*8*M_PI*GRAVITY/(3*C*C*C*HUBBLE*HUBBLE)*pow(T_CMB0,4)/All.HubbleParam/All.HubbleParam)
+/* Note there is a slight correction from 4/11
+ * due to the neutrinos being slightly coupled at e+- annihilation.
+ * See Mangano et al 2005 (hep-ph/0506164)
+ *The correction is (3.046/3)^(1/4), for N_eff = 3.046 */
+#define TNU     (T_CMB0*pow(4/11.,1/3.)*1.00328)              /* Neutrino + antineutrino background temperature in Kelvin */
+/*For massless neutrinos, rho_nu/rho_g = 7/8 (T_nu/T_cmb)^4 *N_eff, but we absorbed N_eff into T_nu above*/
+#define OMEGANU (OMEGAG*7/8.*pow(TNU/T_CMB0,4)*3)
+#endif
+
+double hubble_function(double a)
+{
+    /* Matter + Lambda + curvature*/
+    double omega_tot = All.Omega0/pow(a,3) + All.OmegaLambda + (1.-All.OmegaLambda-All.Omega0)/(a*a);
+    /*Neutrinos*/
+#ifdef KSPACE_NEUTRINOS_2
+    omega_tot += OmegaNu(a) - OmegaNu(1)/pow(a,3);
+#endif
+    /*Radiation*/
+#ifdef INCLUDE_RADIATION
+    omega_tot += OMEGAG/pow(a,4);
+#ifndef KSPACE_NEUTRINOS_2
+    /*With massless neutrinos only, add the neutrinos to the radiation*/
+    omega_tot += OMEGANU/pow(a,4);
+#endif
+#endif
+    return All.Hubble * sqrt(omega_tot);
+}
+
 
 /*! This function computes look-up tables for factors needed in
  *  cosmological integrations. The (simple) integrations are carried out
@@ -178,10 +212,7 @@ double get_hydrokick_factor(int time0, int time1)
  */
 double drift_integ(double a, void *param)
 {
-  double h;
-
-  h = All.Omega0 / (a * a * a) + (1 - All.Omega0 - All.OmegaLambda) / (a * a) + All.OmegaLambda;
-  h = All.Hubble * sqrt(h);
+  double h = hubble_function(a);
 
   return 1 / (h * a * a * a);
 }
@@ -192,8 +223,7 @@ double gravkick_integ(double a, void *param)
 {
   double h;
 
-  h = All.Omega0 / (a * a * a) + (1 - All.Omega0 - All.OmegaLambda) / (a * a) + All.OmegaLambda;
-  h = All.Hubble * sqrt(h);
+  h = hubble_function(a);
 
   return 1 / (h * a * a);
 }
@@ -205,18 +235,14 @@ double hydrokick_integ(double a, void *param)
 {
   double h;
 
-  h = All.Omega0 / (a * a * a) + (1 - All.Omega0 - All.OmegaLambda) / (a * a) + All.OmegaLambda;
-  h = All.Hubble * sqrt(h);
+  h = hubble_function(a);
 
   return 1 / (h * pow(a, 3 * GAMMA_MINUS1) * a);
 }
 
 double growthfactor_integ(double a, void *param)
 {
-  double s;
-
-  s = All.Omega0 + (1 - All.Omega0 - All.OmegaLambda) * a + All.OmegaLambda * a * a * a;
-  s = sqrt(s);
+  double s = hubble_function(a) * sqrt(a * a * a)/All.Hubble;
 
   return pow(sqrt(a) / s, 3);
 }
diff --git a/hydra.c b/hydra.c
index 167953a..35ebc57 100644
--- a/hydra.c
+++ b/hydra.c
@@ -78,10 +78,7 @@ void hydro_force(void)
   if(All.ComovingIntegrationOn)
     {
       /* Factors for comoving integration of hydro */
-      hubble_a = All.Omega0 / (All.Time * All.Time * All.Time)
-	+ (1 - All.Omega0 - All.OmegaLambda) / (All.Time * All.Time) + All.OmegaLambda;
-
-      hubble_a = All.Hubble * sqrt(hubble_a);
+      hubble_a = hubble_function(All.Time);
       hubble_a2 = All.Time * All.Time * hubble_a;
 
       fac_mu = pow(All.Time, 3 * (GAMMA - 1) / 2) / All.Time;
diff --git a/proto.h b/proto.h
index d82a1e3..badd966 100644
--- a/proto.h
+++ b/proto.h
@@ -12,7 +12,9 @@
 
 #ifdef KSPACE_NEUTRINOS_2
 #include "kspace-neutrinos/interface_gadget.h"
+/*Forward define the hubble function*/
 #endif
+double hubble_function(double a);
 
 void   advance_and_find_timesteps(void);
 void   allocate_commbuffers(void);
diff --git a/timestep.c b/timestep.c
index bf6ecef..1031aff 100644
--- a/timestep.c
+++ b/timestep.c
@@ -49,10 +49,8 @@ void advance_and_find_timesteps(void)
       fac1 = 1 / (All.Time * All.Time);
       fac2 = 1 / pow(All.Time, 3 * GAMMA - 2);
       fac3 = pow(All.Time, 3 * (1 - GAMMA) / 2.0);
-      hubble_a = All.Omega0 / (All.Time * All.Time * All.Time)
-	+ (1 - All.Omega0 - All.OmegaLambda) / (All.Time * All.Time) + All.OmegaLambda;
 
-      hubble_a = All.Hubble * sqrt(hubble_a);
+      hubble_a = hubble_function(All.Time);
       a3inv = 1 / (All.Time * All.Time * All.Time);
       atime = All.Time;
     }
-- 
2.9.3

